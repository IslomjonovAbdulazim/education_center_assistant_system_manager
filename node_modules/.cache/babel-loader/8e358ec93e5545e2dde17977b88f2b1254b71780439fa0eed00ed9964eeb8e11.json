{"ast":null,"code":"var _jsxFileName = \"/Users/abdulazim/Documents/web_stuff/real-projects/education_center_assistant_system_manager/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { authService } from './services/auth';\nimport Layout from './components/Layout';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Assistants from './pages/Assistants';\nimport Students from './pages/Students';\nimport Subjects from './pages/Subjects';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('dashboard');\n  useEffect(() => {\n    // Check if user is already authenticated\n    const isAuth = authService.isAuthenticated();\n    setIsAuthenticated(isAuth);\n    setLoading(false);\n  }, []);\n  const handleLogin = (token, user) => {\n    setIsAuthenticated(true);\n    setActiveTab('dashboard');\n  };\n  const handleLogout = () => {\n    authService.logout();\n    setIsAuthenticated(false);\n    setActiveTab('dashboard');\n  };\n  const handleTabChange = tabId => {\n    setActiveTab(tabId);\n  };\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show login page if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render main application\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    activeTab: activeTab,\n    onTabChange: handleTabChange,\n    onLogout: handleLogout,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content active\",\n      children: [activeTab === 'dashboard' && /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 39\n      }, this), activeTab === 'assistants' && /*#__PURE__*/_jsxDEV(Assistants, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 40\n      }, this), activeTab === 'students' && /*#__PURE__*/_jsxDEV(Students, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }, this), activeTab === 'subjects' && /*#__PURE__*/_jsxDEV(Subjects, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"e5hJACUDGflQ5W6ZRx9xPLRJsMw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","authService","Layout","Login","Dashboard","Assistants","Students","Subjects","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","activeTab","setActiveTab","isAuth","handleLogin","token","user","handleLogout","logout","handleTabChange","tabId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onTabChange","onLogout","_c","$RefreshReg$"],"sources":["/Users/abdulazim/Documents/web_stuff/real-projects/education_center_assistant_system_manager/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { authService } from './services/auth';\nimport Layout from './components/Layout';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Assistants from './pages/Assistants';\nimport Students from './pages/Students';\nimport Subjects from './pages/Subjects';\nimport './index.css';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('dashboard');\n\n  useEffect(() => {\n    // Check if user is already authenticated\n    const isAuth = authService.isAuthenticated();\n    setIsAuthenticated(isAuth);\n    setLoading(false);\n  }, []);\n\n  const handleLogin = (token, user) => {\n    setIsAuthenticated(true);\n    setActiveTab('dashboard');\n  };\n\n  const handleLogout = () => {\n    authService.logout();\n    setIsAuthenticated(false);\n    setActiveTab('dashboard');\n  };\n\n  const handleTabChange = (tabId) => {\n    setActiveTab(tabId);\n  };\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <div className=\"spinner\"></div>\n        Loading...\n      </div>\n    );\n  }\n\n  // Show login page if not authenticated\n  if (!isAuthenticated) {\n    return <Login onLogin={handleLogin} />;\n  }\n\n  // Render main application\n  return (\n    <Layout \n      activeTab={activeTab} \n      onTabChange={handleTabChange}\n      onLogout={handleLogout}\n    >\n      <div className=\"tab-content active\">\n        {activeTab === 'dashboard' && <Dashboard />}\n        {activeTab === 'assistants' && <Assistants />}\n        {activeTab === 'students' && <Students />}\n        {activeTab === 'subjects' && <Subjects />}\n      </div>\n    </Layout>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}