{"ast":null,"code":"import { authAPI } from './api';\nexport const authService = {\n  login: async (phone, password, learningCenterId) => {\n    try {\n      const response = await authAPI.login({\n        phone,\n        password,\n        learning_center_id: learningCenterId\n      });\n      const {\n        token,\n        user_info\n      } = response.data;\n\n      // Check if user is manager\n      if (user_info.role !== 'manager') {\n        throw new Error('Access denied. Manager access required.');\n      }\n\n      // Store auth data\n      localStorage.setItem('manager_token', token);\n      localStorage.setItem('manager_user', JSON.stringify(user_info));\n      return {\n        token,\n        user: user_info\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message || 'Login failed';\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('manager_token');\n    localStorage.removeItem('manager_user');\n  },\n  getCurrentUser: () => {\n    const userData = localStorage.getItem('manager_user');\n    return userData ? JSON.parse(userData) : null;\n  },\n  getToken: () => {\n    return localStorage.getItem('manager_token');\n  },\n  isAuthenticated: () => {\n    const token = localStorage.getItem('manager_token');\n    const user = authService.getCurrentUser();\n    return !!(token && user && user.role === 'manager');\n  },\n  changePassword: async (currentPassword, newPassword) => {\n    try {\n      const response = await authAPI.changePassword({\n        current_password: currentPassword,\n        new_password: newPassword\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to change password';\n    }\n  }\n};","map":{"version":3,"names":["authAPI","authService","login","phone","password","learningCenterId","response","learning_center_id","token","user_info","data","role","Error","localStorage","setItem","JSON","stringify","user","error","_error$response","_error$response$data","detail","message","logout","removeItem","getCurrentUser","userData","getItem","parse","getToken","isAuthenticated","changePassword","currentPassword","newPassword","current_password","new_password","_error$response2","_error$response2$data"],"sources":["/Users/abdulazim/Documents/web_stuff/real-projects/education_center_assistant_system_manager/src/services/auth.js"],"sourcesContent":["import { authAPI } from './api';\n\nexport const authService = {\n  login: async (phone, password, learningCenterId) => {\n    try {\n      const response = await authAPI.login({\n        phone,\n        password,\n        learning_center_id: learningCenterId\n      });\n      \n      const { token, user_info } = response.data;\n      \n      // Check if user is manager\n      if (user_info.role !== 'manager') {\n        throw new Error('Access denied. Manager access required.');\n      }\n      \n      // Store auth data\n      localStorage.setItem('manager_token', token);\n      localStorage.setItem('manager_user', JSON.stringify(user_info));\n      \n      return { token, user: user_info };\n    } catch (error) {\n      throw error.response?.data?.detail || error.message || 'Login failed';\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('manager_token');\n    localStorage.removeItem('manager_user');\n  },\n\n  getCurrentUser: () => {\n    const userData = localStorage.getItem('manager_user');\n    return userData ? JSON.parse(userData) : null;\n  },\n\n  getToken: () => {\n    return localStorage.getItem('manager_token');\n  },\n\n  isAuthenticated: () => {\n    const token = localStorage.getItem('manager_token');\n    const user = authService.getCurrentUser();\n    return !!(token && user && user.role === 'manager');\n  },\n\n  changePassword: async (currentPassword, newPassword) => {\n    try {\n      const response = await authAPI.changePassword({\n        current_password: currentPassword,\n        new_password: newPassword\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data?.detail || 'Failed to change password';\n    }\n  }\n};"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,OAAO,MAAMC,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,gBAAgB,KAAK;IAClD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACE,KAAK,CAAC;QACnCC,KAAK;QACLC,QAAQ;QACRG,kBAAkB,EAAEF;MACtB,CAAC,CAAC;MAEF,MAAM;QAAEG,KAAK;QAAEC;MAAU,CAAC,GAAGH,QAAQ,CAACI,IAAI;;MAE1C;MACA,IAAID,SAAS,CAACE,IAAI,KAAK,SAAS,EAAE;QAChC,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;MAC5D;;MAEA;MACAC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEN,KAAK,CAAC;MAC5CK,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS,CAAC,CAAC;MAE/D,OAAO;QAAED,KAAK;QAAES,IAAI,EAAER;MAAU,CAAC;IACnC,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAM,EAAAD,eAAA,GAAAD,KAAK,CAACZ,QAAQ,cAAAa,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBT,IAAI,cAAAU,oBAAA,uBAApBA,oBAAA,CAAsBC,MAAM,KAAIH,KAAK,CAACI,OAAO,IAAI,cAAc;IACvE;EACF,CAAC;EAEDC,MAAM,EAAEA,CAAA,KAAM;IACZV,YAAY,CAACW,UAAU,CAAC,eAAe,CAAC;IACxCX,YAAY,CAACW,UAAU,CAAC,cAAc,CAAC;EACzC,CAAC;EAEDC,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMC,QAAQ,GAAGb,YAAY,CAACc,OAAO,CAAC,cAAc,CAAC;IACrD,OAAOD,QAAQ,GAAGX,IAAI,CAACa,KAAK,CAACF,QAAQ,CAAC,GAAG,IAAI;EAC/C,CAAC;EAEDG,QAAQ,EAAEA,CAAA,KAAM;IACd,OAAOhB,YAAY,CAACc,OAAO,CAAC,eAAe,CAAC;EAC9C,CAAC;EAEDG,eAAe,EAAEA,CAAA,KAAM;IACrB,MAAMtB,KAAK,GAAGK,YAAY,CAACc,OAAO,CAAC,eAAe,CAAC;IACnD,MAAMV,IAAI,GAAGhB,WAAW,CAACwB,cAAc,CAAC,CAAC;IACzC,OAAO,CAAC,EAAEjB,KAAK,IAAIS,IAAI,IAAIA,IAAI,CAACN,IAAI,KAAK,SAAS,CAAC;EACrD,CAAC;EAEDoB,cAAc,EAAE,MAAAA,CAAOC,eAAe,EAAEC,WAAW,KAAK;IACtD,IAAI;MACF,MAAM3B,QAAQ,GAAG,MAAMN,OAAO,CAAC+B,cAAc,CAAC;QAC5CG,gBAAgB,EAAEF,eAAe;QACjCG,YAAY,EAAEF;MAChB,CAAC,CAAC;MACF,OAAO3B,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MAAA,IAAAkB,gBAAA,EAAAC,qBAAA;MACd,MAAM,EAAAD,gBAAA,GAAAlB,KAAK,CAACZ,QAAQ,cAAA8B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB1B,IAAI,cAAA2B,qBAAA,uBAApBA,qBAAA,CAAsBhB,MAAM,KAAI,2BAA2B;IACnE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}